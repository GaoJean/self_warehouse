<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60000" debug="false">
    <!-- 文件输出格式 -->
    <property name="PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS}|%5level|%thread|%c[%L]|%msg%n"/>
    <property name="MYBATIS-WHOLE-PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS}|%5level|%thread|%msg%n"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <Pattern>${PATTERN}</Pattern>
        </encoder>
    </appender>
    <!-- 过滤掉 TRACE 和 DEBUG 级别的日志，info,warn，error日志会打到info.log，总大小最大9G，每个文件最大3G，每天1个文件，最多保留3个文件 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <file>logs/info.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>3GB</maxFileSize>
            <maxHistory>3</maxHistory>
            <totalSizeCap>9GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- error日志打印到error.log,总大小最大6G，每个文件最大2G，每天1个文件，最多保留3个文件 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>logs/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>2GB</maxFileSize>
            <maxHistory>3</maxHistory>
            <totalSizeCap>6GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>


    <!-- 打印MyBatis的日志 只有sql日志会打到mybatis.log，总大小最大45G，每个文件最大3G，每天1个文件，最多保留15个文件 -->
    <appender name="MYBATIS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <file>logs/mybatis.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/mybatis-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>3GB</maxFileSize>
            <maxHistory>3</maxHistory>
            <totalSizeCap>15GB</totalSizeCap>
        </rollingPolicy>

        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="MYBATIS-WHOLE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <file>logs/mybatis-whole.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/mybatis-whole-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>3GB</maxFileSize>
            <maxHistory>3</maxHistory>
            <totalSizeCap>15GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${MYBATIS-WHOLE-PATTERN}</pattern>
        </encoder>
    </appender>

    <logger name="mybatis-whole" level="DEBUG" additivity="true">
        <appender-ref ref="MYBATIS-WHOLE"/>
    </logger>
    <!-- 用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。<logger>仅有一个name属性，一个可选的level和一个可选的additivity属性。 name：用来指定受此logger约束的某一个包或者具体的某一个类。 level：用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特殊值INHERITED或者同义词NULL，代表强制执行上级的级别。 如果未设置此属性，那么当前logger将会继承上级的级别。
    additivity：是否向上级logger传递打印信息。默认是true。 意味着：打印{package}.dal.mapper package下面的日志，这个是所有的sql日志。同时，这个日志也会添加到root logger。 那么如果我们在运行时，把INFO appender的<level>INFO</level>，改为<level>DEBUG</level>，那么sql日志也会同时打印到info.log文件中 -->
    <logger name="com.warehouse.dal.mapper" level="DEBUG" additivity="true">
        <appender-ref ref="MYBATIS"/>
    </logger>

    <root>
        <appender-ref ref="INFO"/>
        <appender-ref ref="ERROR"/>
        <appender-ref ref="STDOUT"/>
    </root>

</configuration>  
