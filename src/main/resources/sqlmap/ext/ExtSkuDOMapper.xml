<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warehouse.dal.mapper.ext.ExtSkuDOMapper">
  <resultMap id="BaseResultMap" type="com.warehouse.dal.model.SkuDO"
             extends="com.warehouse.dal.mapper.SkuDOMapper.BaseResultMap">

  </resultMap>
  <sql id="Base_Column_List">
    <include refid="com.warehouse.dal.mapper.SkuDOMapper.Base_Column_List"/>
  </sql>
  <insert id="insert" parameterType="com.warehouse.dal.model.SkuDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `sku` (sku_name, cost_price, `status`, 
      unit)
    values (#{skuName,jdbcType=VARCHAR}, #{costPrice,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{unit,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.warehouse.dal.model.SkuDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `sku`
    set sku_name = #{skuName,jdbcType=VARCHAR},
      cost_price = #{costPrice,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      unit = #{unit,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'false' as QUERYID,id, sku_name, cost_price, `status`, unit, is_delete, gmt_create, 
    gmt_modified
    from `sku`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, sku_name, cost_price, `status`, unit, is_delete, gmt_create, gmt_modified
    from `sku`
  </select>

  <select id="selectByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `sku`
    where is_delete = 0
    and id in
    <foreach collection="skuIds" separator="," open="(" close=")" item="id">
      #{id}
    </foreach>
  </select>
</mapper>